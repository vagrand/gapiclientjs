/**
 * Generic API
 * Стандартизованное API коннектора, предназначенного для интеграции с внешним источником данных. Общая спецификация [тут](https://co-ms.atlassian.net/wiki/spaces/NC/pages/85852315/Generic+API)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetricValue model module.
 * @module GenericApi/Model/MetricValue
 * @version 1.0.0
 */
class MetricValue {
    /**
     * Constructs a new <code>MetricValue</code>.
     * @alias module:GenericApi/Model/MetricValue
     */
    constructor() { 
        
        MetricValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetricValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:GenericApi/Model/MetricValue} obj Optional instance to populate.
     * @return {module:GenericApi/Model/MetricValue} The populated <code>MetricValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricValue();

            if (data.hasOwnProperty('metric_id')) {
                obj['metric_id'] = ApiClient.convertToType(data['metric_id'], 'Number');
            }
            if (data.hasOwnProperty('value_string')) {
                obj['value_string'] = ApiClient.convertToType(data['value_string'], 'String');
            }
            if (data.hasOwnProperty('value_number')) {
                obj['value_number'] = ApiClient.convertToType(data['value_number'], 'Number');
            }
            if (data.hasOwnProperty('value_min')) {
                obj['value_min'] = ApiClient.convertToType(data['value_min'], 'Number');
            }
            if (data.hasOwnProperty('value_max')) {
                obj['value_max'] = ApiClient.convertToType(data['value_max'], 'Number');
            }
            if (data.hasOwnProperty('value_avg')) {
                obj['value_avg'] = ApiClient.convertToType(data['value_avg'], 'Number');
            }
            if (data.hasOwnProperty('value_sum')) {
                obj['value_sum'] = ApiClient.convertToType(data['value_sum'], 'Number');
            }
            if (data.hasOwnProperty('created_ts')) {
                obj['created_ts'] = ApiClient.convertToType(data['created_ts'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} metric_id
 */
MetricValue.prototype['metric_id'] = undefined;

/**
 * Значение метрики такое, каким оно было получено из источника
 * @member {String} value_string
 */
MetricValue.prototype['value_string'] = undefined;

/**
 * Значение, полученное из источника и приведенное к типу float. Будет равен value_avg, если в запросе указан параметр group_div
 * @member {Number} value_number
 */
MetricValue.prototype['value_number'] = undefined;

/**
 * Будет равен value_number, если в запросе не указан параметр group_div
 * @member {Number} value_min
 */
MetricValue.prototype['value_min'] = undefined;

/**
 * Будет равен value_number, если в запросе не указан параметр group_div
 * @member {Number} value_max
 */
MetricValue.prototype['value_max'] = undefined;

/**
 * Будет равен value_number, если в запросе не указан параметр group_div
 * @member {Number} value_avg
 */
MetricValue.prototype['value_avg'] = undefined;

/**
 * Будет равен value_number, если в запросе не указан параметр group_div
 * @member {Number} value_sum
 */
MetricValue.prototype['value_sum'] = undefined;

/**
 * @member {Number} created_ts
 */
MetricValue.prototype['created_ts'] = undefined;






export default MetricValue;

