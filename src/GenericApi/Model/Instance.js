/**
 * Generic API
 * Стандартизованное API коннектора, предназначенного для интеграции с внешним источником данных. Общая спецификация [тут](https://co-ms.atlassian.net/wiki/spaces/NC/pages/85852315/Generic+API)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceConfig from './InstanceConfig';

/**
 * The Instance model module.
 * @module GenericApi/Model/Instance
 * @version 1.0.0
 */
class Instance {
    /**
     * Constructs a new <code>Instance</code>.
     * @alias module:GenericApi/Model/Instance
     * @param code {String} Уникальный алфавитно-цифровой идентификатор, который присваевается инстансу после успешной установки связи с источником
     * @param name {String} 
     * @param config {module:GenericApi/Model/InstanceConfig} 
     */
    constructor(code, name, config) { 
        
        Instance.initialize(this, code, name, config);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, name, config) { 
        obj['code'] = code;
        obj['name'] = name;
        obj['config'] = config;
    }

    /**
     * Constructs a <code>Instance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:GenericApi/Model/Instance} obj Optional instance to populate.
     * @return {module:GenericApi/Model/Instance} The populated <code>Instance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Instance();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = InstanceConfig.constructFromObject(data['config']);
            }
        }
        return obj;
    }


}

/**
 * Уникальный алфавитно-цифровой идентификатор, который присваевается инстансу после успешной установки связи с источником
 * @member {String} code
 */
Instance.prototype['code'] = undefined;

/**
 * @member {String} name
 */
Instance.prototype['name'] = undefined;

/**
 * @member {module:GenericApi/Model/InstanceConfig} config
 */
Instance.prototype['config'] = undefined;






export default Instance;

