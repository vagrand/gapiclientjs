/**
 * Generic API
 * Стандартизованное API коннектора, предназначенного для интеграции с внешним источником данных. Общая спецификация [тут](https://co-ms.atlassian.net/wiki/spaces/NC/pages/85852315/Generic+API)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QueueSettingsExchange from './QueueSettingsExchange';
import QueueSettingsQueue from './QueueSettingsQueue';

/**
 * The QueueSettings model module.
 * @module GenericApi/Model/QueueSettings
 * @version 1.0.0
 */
class QueueSettings {
    /**
     * Constructs a new <code>QueueSettings</code>.
     * @alias module:GenericApi/Model/QueueSettings
     * @param host {String} 
     * @param port {Number} 
     * @param user {String} 
     * @param password {String} 
     * @param vhost {String} 
     * @param exchange {module:GenericApi/Model/QueueSettingsExchange} 
     * @param queue {module:GenericApi/Model/QueueSettingsQueue} 
     */
    constructor(host, port, user, password, vhost, exchange, queue) { 
        
        QueueSettings.initialize(this, host, port, user, password, vhost, exchange, queue);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, host, port, user, password, vhost, exchange, queue) { 
        obj['host'] = host;
        obj['port'] = port;
        obj['user'] = user;
        obj['password'] = password;
        obj['vhost'] = vhost;
        obj['exchange'] = exchange;
        obj['queue'] = queue;
    }

    /**
     * Constructs a <code>QueueSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:GenericApi/Model/QueueSettings} obj Optional instance to populate.
     * @return {module:GenericApi/Model/QueueSettings} The populated <code>QueueSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueueSettings();

            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('vhost')) {
                obj['vhost'] = ApiClient.convertToType(data['vhost'], 'String');
            }
            if (data.hasOwnProperty('exchange')) {
                obj['exchange'] = QueueSettingsExchange.constructFromObject(data['exchange']);
            }
            if (data.hasOwnProperty('queue')) {
                obj['queue'] = QueueSettingsQueue.constructFromObject(data['queue']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} host
 */
QueueSettings.prototype['host'] = undefined;

/**
 * @member {Number} port
 */
QueueSettings.prototype['port'] = undefined;

/**
 * @member {String} user
 */
QueueSettings.prototype['user'] = undefined;

/**
 * @member {String} password
 */
QueueSettings.prototype['password'] = undefined;

/**
 * @member {String} vhost
 */
QueueSettings.prototype['vhost'] = undefined;

/**
 * @member {module:GenericApi/Model/QueueSettingsExchange} exchange
 */
QueueSettings.prototype['exchange'] = undefined;

/**
 * @member {module:GenericApi/Model/QueueSettingsQueue} queue
 */
QueueSettings.prototype['queue'] = undefined;






export default QueueSettings;

